// Input:
// {
//   "tree": [
//     [1, 2],
//     [3, 4]
//   ]
// }
//
// Output:
// [
//   [
//     'left',
//     [
//       ['left', 1],
//       ['right', 2]
//     ]
//   ],
//   [
//     'right',
//     [
//       ['left', 3],
//       ['right', 4]
//     ]
//   ]
// ]
//

// Default template has lowest priority and will be called only
// if all other hasn't matched against incoming data
template(true)(function () { return this.tree; });

template(Array.isArray(this.tree))(function () { 
    return [
        apply({ node: 'left', tree: this.tree[0] }),
        apply({ node: 'right', tree: this.tree[1] })
    ];
});

template(this.node === 'left') (function () { 
    return [ 'left', apply({ node: null, tree: this.tree }) ];
});

template(this.node === 'right') (function () { 
    return [ 'right', apply({ node: null, tree: this.tree }) ]; 
});
